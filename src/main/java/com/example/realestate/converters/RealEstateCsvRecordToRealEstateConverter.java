package com.example.realestate.converters;

import com.example.realestate.dto.RealEstateCsvRecord;
import com.example.realestate.model.RealEstate;
import org.springframework.stereotype.Component;

/**
 * Converter that maps a RealEstateCsvRecord DTO to a RealEstate entity.
 */
@Component
public class RealEstateCsvRecordToRealEstateConverter implements Converter<RealEstateCsvRecord, RealEstate> {

    @Override
    public RealEstate convert(RealEstateCsvRecord record) {
        if (record == null) {
            return null;
        }

        return RealEstate.builder()
                .mlsNumber(record.getMlsNumber())
                .taxId(record.getTaxId())
                .address(record.getAddress())
                .city(record.getCity())
                .state(record.getState())
                .zip(record.getZip())
                .status(record.getStatus())
                .shortSale(record.getShortSale())
                .timeUC(record.getTimeUC())
                .dom(record.getDom())
                .soldDate(record.getSoldDate())
                .soldTerms(record.getSoldTerms())
                .soldPrice(record.getSoldPrice())
                .soldConcessions(record.getSoldConcessions())
                .listPrice(record.getListPrice())
                .originalListPrice(record.getOriginalListPrice())
                .underContractDate(record.getUnderContractDate())
                .entryDate(record.getEntryDate())
                .effectiveDateOfListingAgreement(record.getEffectiveDateOfListingAgreement())
                .statusChangeDate(record.getStatusChangeDate())
                .offMarketDate(record.getOffMarketDate())
                .reinstatedDate(record.getReinstatedDate())
                .cancelDate(record.getCancelDate())
                .offerUnder3rdPartyReview(record.getOfferUnder3rdPartyReview())
                .priceIncreaseDate(record.getPriceIncreaseDate())
                .priceIncreaseDaysBack(record.getPriceIncreaseDaysBack())
                .priceReductionDate(record.getPriceReductionDate())
                .priceReductionDaysBack(record.getPriceReductionDaysBack())
                .backupStatusDate(record.getBackupStatusDate())
                .withdrawalDate(record.getWithdrawalDate())
                .expireDate(record.getExpireDate())
                .acres(record.getAcres())
                .propertyType(record.getPropertyType())
                .style(record.getStyle())
                .yearBuilt(record.getYearBuilt())
                .grossLivingAreaGla(record.getGrossLivingAreaGla())
                .totalSquareFeet(record.getTotalSquareFeet())
                .totalBedrooms(record.getTotalBedrooms())
                .totalBathrooms(record.getTotalBathrooms())
                .totalFullBathrooms(record.getTotalFullBathrooms())
                .totalThreeQuarterBathrooms(record.getTotalThreeQuarterBathrooms())
                .totalHalfBathrooms(record.getTotalHalfBathrooms())
                .totalKitchens(record.getTotalKitchens())
                .basementSquareFeet(record.getBasementSquareFeet())
                .basementFinished(record.getBasementFinished())
                .basementBedrooms(record.getBasementBedrooms())
                .basementFullBathrooms(record.getBasementFullBathrooms())
                .basementThreeQuarterBathrooms(record.getBasementThreeQuarterBathrooms())
                .basementHalfBathrooms(record.getBasementHalfBathrooms())
                .basement(record.getBasement())
                .heating(record.getHeating())
                .airConditioning(record.getAirConditioning())
                .garageCapacity(record.getGarageCapacity())
                .carportCapacity(record.getCarportCapacity())
                .garageParking(record.getGarageParking())
                .decks(record.getDecks())
                .solar(record.getSolar())
                .solarOwnership(record.getSolarOwnership())
                .totalFireplaces(record.getTotalFireplaces())
                .landscape(record.getLandscape())
                .poolAvailable(record.getPoolAvailable())
                .poolDetails(record.getPoolDetails())
                .hoaFee(record.getHoaFee())
                .hoaAmenities(record.getHoaAmenities())
                .hoaRemarks(record.getHoaRemarks())
                .mainFloorSquareFeet(record.getMainFloorSquareFeet())
                .secondFloorSquareFeet(record.getSecondFloorSquareFeet())
                .thirdFloorSquareFeet(record.getThirdFloorSquareFeet())
                .fourthFloorSquareFeet(record.getFourthFloorSquareFeet())
                .exteriorFeatures(record.getExteriorFeatures())
                .floor(record.getFloor())
                .county(record.getCounty())
                .interiorFeatures(record.getInteriorFeatures())
                .publicRemarks(record.getPublicRemarks())
                .bacCompensation(record.getBacCompensation())
                .mlsLink(record.getMlsLink())
                .quality(record.getQuality())
                .condition(record.getCondition())
                .locationPositive(record.getLocationPositive())
                .locationNegative(record.getLocationNegative())
                .viewPositive(record.getViewPositive())
                .viewNegative(record.getViewNegative())
                .adu(record.getAdu())
                .remodUpdate(record.getRemodUpdate())
                .outbuilding(record.getOutbuilding())
                .fullAddress(record.getFullAddress())
                .latitude(record.getLatitude())
                .longitude(record.getLongitude())
                .legal(record.getLegal())
                .verified(record.getVerified())
                .daysBack(record.getDaysBack())
                .legalMatchToTax(record.getLegalMatchToTax())
                .countyRecordLink(record.getCountyRecordLink())
                .htmlBodyTd(record.getHtmlBodyTd())
                .build();
    }
}
